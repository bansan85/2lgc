Pour compiler et installer l'application, il suffit de lancer les commandes suivantes :
git clean -Xdf
gettextize -f --no-changelog

sed -i 's#po/Makefile.in po/Makefile.in#po/Makefile.in#g' configure.ac
sed -i 's/config.rpath  config.rpath/config.rpath/g' Makefile.am
cd po
patch < ../diff-po-Makevars.template.patch
cd ..
mv po/Makevars.template po/Makevars
rm -f po/POTFILES.in
find src/libeurocode -maxdepth 1 -name "*.cpp" > po/POTFILES.in
find src/libprojet -maxdepth 1 -name "*.cpp" >> po/POTFILES.in
find src/libundo -maxdepth 1 -name "*.cpp" >> po/POTFILES.in
#find src/gtk -maxdepth 1 -name "*.cpp" >> po/POTFILES.in

autoheader
aclocal -I m4
libtoolize
automake --add-missing --copy
autoconf

Pour compiler avec une version des autotools différentes de celle par défaut :
autoheader-2.68
WANT_AUTOCONF="2.68" aclocal -I m4
libtoolize
WANT_AUTOCONF="2.68" automake --add-missing --copy
autoconf-2.68

Avec gcc :
./configure --with-gui=none --with-debug --enable-valgrind-testing --prefix=/usr/local CFLAGS="" CXXFLAGS=""
./configure --with-gui=none --with-debug --with-doc --prefix=/usr/local CFLAGS="" CXXFLAGS=""
./configure --with-gui=none --with-debug --prefix=/usr/local CFLAGS="" CXXFLAGS=""
./configure --with-gui=gtk3 --with-debug --prefix=/usr/local CFLAGS="" CXXFLAGS=""
sed -i 's/-DPIC/-DPIC -Wl,--as-needed/g' libtool
find . -name "Makefile" -exec sed -i "s#-I/usr#-isystem/usr#g" {} \;
make -j9
make check -j9
make distcheck -j9
LD_LIBRARY_PATH=/usr/local/lib /usr/local/bin/codegui && make distcheck -j9
make check -j9 && LD_LIBRARY_PATH=/usr/local/lib /usr/local/bin/codegui && make distcheck -j9
make check -j9 && rm -Rf out_html && lcov --capture --directory . --output-file coverage.info && genhtml coverage.info --output-directory out_html && firefox out_html/index.html
NOTA :
    -pg

Avec clang :
./configure --with-gui=gtk3 --with-debug --prefix=/usr/local CFLAGS="" CXXFLAGS="" CC=clang CXX=clang++
Avec ICC :
./configure --with-gui=gtk3 --with-debug --prefix=/usr/local CFLAGS="" CXXFLAGS="" CC=icc CXX=icc


si le programme ne permet pas une compilation sans erreur par la procédure ci-dessus :
1) vérifier le message d'erreur, il s'agit peut-être d'une application dont dépend le logiciel qui est non installée
2) A défaut, il faut déposer un rapport de bogue afin de résoudre ce problème et ce, même si la solution est simple. L'objectif est que la compilation se passe toujours sans le moindre problème.



La commande suivante permet de créer un nouveau fichier de traduction dans une langue.
msginit -l fr -o fr.po -i `find . -name "*.pot"` : permet d'ajouter une langue (dans le cas ici, le français). L'abbréviation est compatible avec /usr/share/locale
NOTA : avant de lancer msginit, il est nécessaire de compiler l'application
